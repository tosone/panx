{"version":3,"sources":["serviceWorker.js","components/Navbar/index.jsx","components/UserInfoCard/index.jsx","pages/Home/index.jsx","pages/Signin/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","current","handleClick","e","history","push","key","bind","assertThisInitialized","react_default","a","createElement","layout","Header","menu","onClick","selectedKeys","mode","theme","defaultSelectedKeys","style","lineHeight","Item","icon","type","float","React","Component","withRouter","UserInfoCard","className","alt","src","Home","components_Navbar","src_components_UserInfoCard","Footer","textAlign","href","target","rel","FormItem","Form","Signin","componentDidMount","setState","handleSubmit","preventDefault","form","validateFields","err","values","console","log","getFieldDecorator","es_form","onSubmit","rules","required","message","input","prefix","color","placeholder","valuePropName","initialValue","es_checkbox","es_button","htmlType","WrappedNormalLoginForm","create","ReactDOM","render","BrowserRouter","basename","Switch","Route","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.947048ac.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Layout, Menu, Icon } from 'antd';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  state = {\n    current: 'mail',\n  };\n\n  handleClick = e => {\n    this.props.history.push(e.key);\n  };\n\n  render() {\n    return (\n      <Layout.Header>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[this.state.current]}\n          mode=\"horizontal\"\n          theme=\"dark\"\n          defaultSelectedKeys={['home']}\n          style={{ lineHeight: '64px' }}>\n          <Menu.Item key=\"home\">\n            <Icon type=\"home\" />首页\n          </Menu.Item>\n          <Menu.Item key=\"explor\">\n            <Icon type=\"star\" />探索\n          </Menu.Item>\n          <Menu.Item key=\"ranking\">\n            <Icon type=\"line-chart\" />排行榜\n          </Menu.Item>\n          <Menu.Item key=\"signin\" style={{ float: 'right' }}>\n            登录\n          </Menu.Item>\n          <Menu.Item key=\"signup\" style={{ float: 'right' }}>\n            注册\n          </Menu.Item>\n        </Menu>\n      </Layout.Header>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\n\nimport './index.css';\n\nclass UserInfoCard extends React.Component {\n  render() {\n    return (\n      <div className=\"UserInfoCard\">\n        <div className=\"UserInfoCard-bg\" />\n        <img\n          alt=\"face\"\n          src=\"/panx/img/face.png\"\n          className=\"UserInfoCard-face-img\"\n        />\n        <div className=\"UserInfoCard-username\">Tosone</div>\n        <div className=\"UserInfoCard-info\">\n          <div className=\"UserInfoCard-info-left\">\n            <div className=\"UserInfoCard-info-number\">217</div>\n            <div className=\"UserInfoCard-info-intro\">Snippets</div>\n          </div>\n          <div className=\"UserInfoCard-info-mid\">\n            <div className=\"UserInfoCard-info-number\">323</div>\n            <div className=\"UserInfoCard-info-intro\">Following</div>\n          </div>\n          <div className=\"UserInfoCard-info-right\">\n            <div className=\"UserInfoCard-info-number\">479</div>\n            <div className=\"UserInfoCard-info-intro\">Followers</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserInfoCard;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport Banner from '../../components/Navbar';\nimport UserInfoCard from '../../components/UserInfoCard';\n\nimport './index.css';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Banner />\n        <div className=\"main\">\n          <div className=\"content\">content</div>\n          <div className=\"content-sider\">\n            <UserInfoCard />\n          </div>\n        </div>\n\n        <Layout.Footer style={{ textAlign: 'center' }}>\n          Code Share ©2018 Created by\n          <a\n            href=\"https://github.com/tosone\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Tosone\n          </a>\n        </Layout.Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nimport { Layout } from 'antd';\n\nimport Banner from '../../components/Navbar';\n\nimport './index.css';\n\nconst FormItem = Form.Item;\n\nclass Signin extends React.Component {\n\n  componentDidMount = () => {\n    this.setState({\n      current: \"signin\",\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Layout>\n        <Banner />\n        <div className=\"login-form-wrap\">\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <FormItem>\n              {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n              })(\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(\n                <Checkbox>Remember me</Checkbox>\n              )}\n              <a className=\"login-form-forgot\" href=\"script:;\">Forgot password</a>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>Or <a href=\"script:;\">register now!</a>\n            </FormItem>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(Signin);\n\nexport default WrappedNormalLoginForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Home from './pages/Home';\nimport Signin from './pages/Signin';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/panx\">\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/home\" exact component={Home} />\n      <Route path=\"/signin\" component={Signin} />\n      {/* <Redirect from=\"/old-match\" to=\"/will-match\" />\n      <Route path=\"/will-match\" component={WillMatch} />\n      <Route component={NoMatch} /> */}\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}